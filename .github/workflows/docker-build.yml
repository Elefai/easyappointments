name: Docker Publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  web:
    name: Build and Publish Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags (lowercase owner for GHCR)
        id: vars
        shell: bash
        run: |
          set -e
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMAGE="ghcr.io/${OWNER_LC}/easyappointments-web"
          if [[ "${GITHUB_EVENT_NAME}" == "push" && "${GITHUB_REF_TYPE}" == "branch" && "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "push=true" >> $GITHUB_OUTPUT
            echo "tags=${IMAGE}:latest,${IMAGE}:sha-${GITHUB_SHA::12}" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_EVENT_NAME}" == "push" && "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" == v* ]]; then
            echo "push=true" >> $GITHUB_OUTPUT
            echo "tags=${IMAGE}:${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          else
            echo "push=false" >> $GITHUB_OUTPUT
            echo "tags=${IMAGE}:ci" >> $GITHUB_OUTPUT
          fi

      - name: Compute platforms
        id: plat
        shell: bash
        run: |
          PLATFORMS="linux/amd64,linux/arm64"
          if [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" =~ -amd64$ ]]; then
            PLATFORMS="linux/amd64"
          fi
          echo "platforms=${PLATFORMS}" >> $GITHUB_OUTPUT

      - name: Build (PR) or Build+Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/apache/Dockerfile.web
          build-args: |
            PHP_VARIANT=8.2
          platforms: ${{ steps.plat.outputs.platforms }}
          push: ${{ steps.vars.outputs.push }}
          tags: ${{ steps.vars.outputs.tags }}
          labels: |
            org.opencontainers.image.title=easyappointments-web
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}/pkgs/container/easyappointments-web
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.description=Web image (Apache + PHP 8.2 + Opcache). UI: clinic selector on calendar; service labels show location across UI; API: optional 'location' filter on /availabilities. '-amd64' tags build only linux/amd64 for faster testing.
          cache-from: type=gha
          cache-to: type=gha,mode=max
