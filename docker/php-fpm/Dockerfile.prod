# Production image for Easy!Appointments php-fpm
FROM php:8.4-fpm AS build

WORKDIR /var/www/html

# Install system deps and PHP extensions (no xdebug)
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        git \
        zip \
        unzip \
        libldap2-dev \
        libicu-dev \
        libjpeg-dev \
        libpng-dev \
        libonig-dev \
        libxml2-dev \
        libzip-dev \
        libpq-dev \
        libsqlite3-dev \
        libssl-dev \
        pkg-config \
        ca-certificates \
    && curl -sSL https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions -o /usr/local/bin/install-php-extensions \
    && chmod +x /usr/local/bin/install-php-extensions \
    && install-php-extensions \
        gd intl ldap mbstring mysqli odbc pdo pdo_mysql soap sockets xml zip exif sqlite3 gettext bcmath redis \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
    && apt-get -y autoremove \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install PHP dependencies
COPY composer.json composer.lock ./
RUN composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

# Build frontend assets
FROM node:18-alpine AS assets
WORKDIR /app
COPY package.json package-lock.json ./
RUN npm ci
COPY gulpfile.js babel.config.json ./
COPY assets ./assets
RUN npm run build

# Final runtime
FROM php:8.4-fpm AS runtime
WORKDIR /var/www/html

# Install runtime PHP extensions (match build stage)
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        libldap-2.5-0 \
        libicu72 \
        libjpeg62-turbo \
        libpng16-16 \
        libxml2 \
        libzip4 \
        libsqlite3-0 \
        ca-certificates \
    && curl -sSL https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions -o /usr/local/bin/install-php-extensions \
    && chmod +x /usr/local/bin/install-php-extensions \
    && install-php-extensions \
        gd intl ldap mbstring mysqli odbc pdo pdo_mysql soap sockets xml zip exif sqlite3 gettext bcmath redis \
    && apt-get -y autoremove \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Copy application code
COPY application ./application
COPY system ./system
COPY index.php patch.php config-sample.php ./
COPY storage ./storage

# Copy vendor from build stage
COPY --from=build /var/www/html/vendor ./vendor

# Copy built assets
COPY --from=assets /app/assets ./assets

# Ensure writable storage (adjust as needed for your orchestrator)
RUN chown -R www-data:www-data storage

EXPOSE 9000
CMD ["php-fpm"]

